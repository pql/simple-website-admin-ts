version: '3.8'

services:
  # hostapi 服务
  wave-hostapi:
    image: ${IMAGE_PREFIX}_hostapi:${IMAGE_TAG}
    depends_on:
      # 依赖服务
      - db-migrator
    deploy:
      # 部署
      replicas: 1 # 实例数
      placement:
        # 容器实例位置
        max_replicas_per_node: 1 # 节点最多1个实例
        constraints:
          # 标签匹配规则
          - "node.labels.app == app"
      resources:
        # 资源限制
        limits:
          # 上限
          memory: 1024M
        reservations:
          # 启动占用
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
      update_config:
        # 更新策略
        parallelism: 1 # 同时更新数量
        delay: 10s # 间隔
        failure_action: "rollback" # 失败回滚
        order: stop-first # 更新顺序
      rollback_config:
        # 回滚配置
        parallelism: 1 # 每次回滚数量
        delay: 10s # 间隔
        monitor: 5s # 监控失败持续时长
        failure_action: "pause" # 回滚错误操作
        order: stop-first # 回滚顺序
    env_file:
      - ./configs/environment.env
    volumes:
      - server_logs:/app/Logs
      - server_files:/app/wwwroot/FileSystem # 文件
      - server_de_files:/app/wwwroot/DecompressingFiles # 解压文件
    networks:
      - wave-network
    configs:
      - source: certs
        target: /app/certificate/localhost.pfx
      - source: mqssl
        target: /app/certificate/client_rabbitmq-mqtt.p12

  # authserver 服务
  wave-authserver:
    image: ${IMAGE_PREFIX}_authserver:${IMAGE_TAG}
    deploy:
      # 部署
      replicas: 1 # 实例数
      placement:
        # 容器实例位置
        max_replicas_per_node: 1 # 节点最多1个实例
        constraints:
          # 标签匹配规则
          - "node.labels.app == app"
      resources:
        # 资源限制
        limits:
          # 上限
          memory: 1024M
        reservations:
          # 启动占用
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
      update_config:
        # 更新策略
        parallelism: 1 # 同时更新数量
        delay: 10s # 间隔
        failure_action: "rollback" # 失败回滚
        order: stop-first # 更新顺序
      rollback_config:
        # 回滚配置
        parallelism: 1 # 每次回滚数量
        delay: 10s # 间隔
        monitor: 5s # 监控失败持续时长
        failure_action: "pause" # 回滚错误操作
        order: stop-first # 回滚顺序
    env_file:
      - ./configs/environment.env
    volumes:
      - authserver_logs:/app/Logs
    networks:
      -  wave-network
    configs:
      - source: certs
        target: /app/certificate/localhost.pfx
      
  # db-migrator 服务
  db-migrator:
    image: ${IMAGE_PREFIX}_migrator:${IMAGE_TAG}
    deploy:
      # 部署策略
      replicas: 1 # 实例数量
      placement:
        # 容器实例配置
        constraints:
          # 标签匹配规则
          - "node.labels.app == app"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      resources:
        # 资源限制
        limits:
          memory: 512M
        reservations:
          memory: 64M
    env_file:
      - ./configs/environment.env
    volumes:
      - migrator_logs:/app/Logs
    networks:
      - wave-network     

  # ng 服务
  wave-ng:
    image: ${IMAGE_PREFIX}_ng:dev
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.app == app"
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 16M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: "rollback"
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 10s
        monitor: 5s
        failure_action: "pause"
        order: stop-first
    networks:
      - wave-network     
    depends_on:
      - wave-hostapi
      - wave-authserver
    configs:
      - source: dynamic_conf
        target: /usr/share/nginx/html/dynamic-env.json
        
  # vue 服务
  wave-vue:
    image: ${IMAGE_PREFIX}_vue:${IMAGE_TAG}
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.app == app"
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 16M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: "rollback"
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 10s
        monitor: 5s
        failure_action: "pause"
        order: stop-first
    networks:
      - wave-network
    depends_on:
      - wave-hostapi
      - wave-authserver
    env_file:
      - ./configs/environment.env
    configs:
      - source: appconfig
        target: /usr/share/nginx/html/assets/appconfig.prod.json

  # nginx 服务
  wave-proxy:
    image: firebytes.azurecr.io/firebytes/nginx:1.17.10
    # ports:
    #   - "80:80"
    #   - "443:443"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.app == app"
      resources:
        limits:
          # cpus: '0.001'
          memory: 1024M
        reservations:
          # cpus: '0.001'
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
    networks:
      - wave-network
    environment:
      - TZ=Asia/Singapore
    volumes:
      - nginx_logs:/var/log/nginx
    depends_on:
      - wave-hostapi
      - wave-authserver
      - wave-ng
      - wave-vue
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
    logging:
      driver: "json-file"
      options:
        max-size: "100m"  # 限制日志大小


  wave-frpc:
    image: firebytes.azurecr.io/firebytes/frpc:0.34.3-env
    networks:
      - wave-network
    depends_on:
      - wave-proxy
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.app == app"
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 16M
    configs:
      - source: frpc_ini
        target: /frpc.ini

volumes:
  nginx_logs:
  server_logs:
  server_files:
  server_de_files: # 解压文件
  authserver_logs:
  migrator_logs:

networks:
  # 网络
  wave-network:
    driver: overlay # swarm 网络通信

configs:
  nginx_conf:
    file: ./configs/nginx.conf
  dynamic_conf:
    file: ./configs/dynamic-env.json
  certs:
    file: ./certs/localhost.pfx
  mqssl:
    file: ./certs/client_rabbitmq-mqtt.p12
  frpc_ini:
    file: ./configs/frpc.ini
  appconfig:
    file: ./configs/appconfig.prod.json